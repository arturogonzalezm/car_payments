<<<<<<< HEAD
name: Code Analysis and Coverage
=======
name: Code Quality and Testing
>>>>>>> 75ed1aee9a960782c7edb80f147d90878fe12d60

on:
  push:
    branches:
<<<<<<< HEAD
      - main
  pull_request:
    branches:
      - main

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Ruff
        run: |
          pip install ruff
      - name: Run Ruff
        run: |
          ruff check . --fix --unsafe-fixes

  pylint:
    needs: ruff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Pylint
        run: |
          pip install pylint
      - name: Code Review Scoring
        run: |
          find . -name '*.py' -not -path './.venv/*' -print -exec pylint {} \;
      - name: Analysing the code with Pylint
        run: |
          pylint $(find . -name '*.py' -not -path './.venv/*') --fail-under=8.0

  codecov:
    needs: pylint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
=======
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yml
          activate-environment: car_payments
          channels: anaconda, conda-forge
      - name: Install dependencies
        run: |
          conda install pylint
      - name: Code Review Scoring
        run: |
          conda activate car_payments
          find . -name '*.py' -exec pylint {} \;
        shell: bash -l {0}
      - name: List Python files
        run: |
          find . -name '*.py'
        shell: /usr/bin/bash -l {0}
      - name: Run PyLint
        run: |
          FILES=$(find . -name '*.py')
          if [ -z "$FILES" ]; then
            echo "No Python files to lint."
          else
            pylint $FILES --fail-under=7.4
          fi
        shell: /usr/bin/bash -l {0}
>>>>>>> 75ed1aee9a960782c7edb80f147d90878fe12d60
      - name: Run Tests and Generate Coverage Report
        run: |
          pip install coverage pytest-cov
          coverage run -m pytest
          coverage report
          coverage xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
<<<<<<< HEAD
          failCiOnError: true
=======
          fail_ci_if_error: true
      - name: Run Ruff for fast Python linting
        uses: chartboost/ruff-action@v1
>>>>>>> 75ed1aee9a960782c7edb80f147d90878fe12d60
